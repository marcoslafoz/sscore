type Query {
    userRead(userId: ID): UserDto

    documentRead(documentId: ID, userId: ID): DocumentDto
    documentGetListByUser(userId: ID): [DocumentDto]

    taskGetListByUser(userId: ID): [TaskDto]
}

type Mutation {
    userCreate(user: InputUserDto): UserDto

    documentEditBody(documentId: ID, body: String) : Boolean

    taskDeleteCheckedList(userId: ID): Int
    taskDelete(taskId: ID): Boolean
    taskEdit(task: InputTaskDto): Boolean
    taskAdd(userId: ID, task: InputTaskDto): Boolean
    taskSetChecked(taskId: ID, checked: Boolean): Boolean


}

type UserDto {
    id: ID
    username: String
    name: String
    surname: String
    email: String
}

input InputUserDto {
    username: String
    name: String
    surname: String
    email: String
    password: String
}

type CourseDto {
    id: ID
    name: String
    color: String
    subjects: [SubjectDto]
}

type SubjectDto {
    id: ID
    name: String
    color: String
}

type DocumentDto {
    id: ID
    title: String
    body: String
    course: CourseDto
}

type TaskDto {
    id: ID
    title: String
    description: String
    checked: Boolean
    date: String
    course: CourseDto
    subject: SubjectDto
}

input InputTaskDto {
    id: ID
    title: String
    description: String
    checked: Boolean
    date: String
    course: InputCourseDto
}

input InputCourseDto {
    id: ID
    name: String
    color: String
}

input InputSubjectDto {
    id: ID
    name: String
    color: String
}