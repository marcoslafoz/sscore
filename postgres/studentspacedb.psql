-- public.avatar definition

-- Drop table

-- DROP TABLE public.avatar;

CREATE TABLE public.avatar (
	id serial4 NOT NULL,
	url varchar NOT NULL,
	title varchar(100) NOT NULL,
	CONSTRAINT avatar_pkey PRIMARY KEY (id)
);


-- public."user" definition

-- Drop table

-- DROP TABLE public."user";

CREATE TABLE public."user" (
	id serial4 NOT NULL,
	username varchar(50) NOT NULL,
	"name" varchar(100) DEFAULT NULL::character varying NOT NULL,
	surname varchar(100) DEFAULT NULL::character varying NULL,
	email varchar(100) DEFAULT NULL::character varying NOT NULL,
	"password" varchar(100) NOT NULL,
	id_avatar int4 NULL,
	birthday date NULL,
	CONSTRAINT user_pkey PRIMARY KEY (id),
	CONSTRAINT fk_user_avatar FOREIGN KEY (id_avatar) REFERENCES public.avatar(id)
);


-- public.course definition

-- Drop table

-- DROP TABLE public.course;

CREATE TABLE public.course (
	id serial4 NOT NULL,
	"name" varchar(255) NOT NULL,
	user_id int4 NOT NULL,
	color varchar(10) NULL,
	CONSTRAINT course_pkey PRIMARY KEY (id),
	CONSTRAINT course_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id)
);


-- public.subject definition

-- Drop table

-- DROP TABLE public.subject;

CREATE TABLE public.subject (
	id serial4 NOT NULL,
	"name" varchar(255) NOT NULL,
	course_id int4 NOT NULL,
	color varchar(10) NULL,
	user_id int4 NOT NULL,
	CONSTRAINT subject_pkey PRIMARY KEY (id),
	CONSTRAINT subject_academic_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.course(id) ON DELETE SET NULL,
	CONSTRAINT subject_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id)
);


-- public.task definition

-- Drop table

-- DROP TABLE public.task;

CREATE TABLE public.task (
	id serial4 NOT NULL,
	user_id int4 NOT NULL,
	title varchar NOT NULL,
	description varchar NULL,
	checked bool DEFAULT false NULL,
	course_id int4 NULL,
	"date" timestamptz NULL,
	subject_id int4 NULL,
	CONSTRAINT task_pkey PRIMARY KEY (id),
	CONSTRAINT task_academic_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.course(id) ON DELETE SET NULL,
	CONSTRAINT task_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subject(id) ON DELETE SET NULL,
	CONSTRAINT task_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id)
);


-- public."document" definition

-- Drop table

-- DROP TABLE public."document";

CREATE TABLE public."document" (
	id serial4 NOT NULL,
	user_id int4 NOT NULL,
	course_id int4 NULL,
	title varchar NOT NULL,
	body varchar NULL,
	subject_id int4 NULL,
	CONSTRAINT document_pkey PRIMARY KEY (id),
	CONSTRAINT document_academic_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.course(id) ON DELETE SET NULL,
	CONSTRAINT document_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subject(id) ON DELETE SET NULL,
	CONSTRAINT document_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id)
);


-- public."event" definition

-- Drop table

-- DROP TABLE public."event";

CREATE TABLE public."event" (
	id serial4 NOT NULL,
	user_id int4 NOT NULL,
	title varchar NOT NULL,
	description varchar NULL,
	all_day bool DEFAULT true NULL,
	course_id int4 NULL,
	start_date timestamptz NULL,
	end_date timestamptz NULL,
	subject_id int4 NULL,
	color varchar DEFAULT '#3788d8'::character varying NULL,
	CONSTRAINT event_pkey PRIMARY KEY (id),
	CONSTRAINT event_academic_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.course(id) ON DELETE SET NULL,
	CONSTRAINT event_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subject(id) ON DELETE SET NULL,
	CONSTRAINT event_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id)
);


-- public.score definition

-- Drop table

-- DROP TABLE public.score;

CREATE TABLE public.score (
	id serial4 NOT NULL,
	user_id int4 NOT NULL,
	"name" varchar NOT NULL,
	subject_id int4 NULL,
	score float4 NULL,
	"date" timestamptz NULL,
	status int4 NULL,
	course_id int4 NULL,
	color varchar NULL,
	CONSTRAINT score_pkey PRIMARY KEY (id),
	CONSTRAINT score_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.course(id) ON DELETE SET NULL,
	CONSTRAINT score_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subject(id) ON DELETE SET NULL,
	CONSTRAINT score_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(id)
);